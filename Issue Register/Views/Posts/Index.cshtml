@model IEnumerable<Issue_Register.Models.Entity.Post>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Issue List</h2>

<div class="box">
    <div class="box-header">
        <h3 class="box-title">Orders List</h3>
    </div>
    <!-- /.box-header -->
    <div class="box-body no-padding">

        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#tab-1"><i class="fa fa-list"></i>Processing</a></li>
            <li class=""><a data-toggle="tab" href="#tab-2"><i class="fa fa-check-square-o"></i> Complete</a></li>
        </ul>
        <div class="tab-content">
            <div id="tab-1" class="tab-pane active">
                <div class="table-responsive" style="overflow-x:auto;">
                    <table class="table myfootable">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Title)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Type)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Photo)
                                </th>
                                <th>
                                    Posting Date
                                </th>
                                <th>
                                    Issued By
                                </th>
                                <th>
                                    Company Name
                                </th>
                                <th>
                                    Employee Branch
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>
                                <th>
                                    Solved By
                                </th>
                                <th>
                                    Action
                                </th>
                                <th colspan="2">
                                    Activity
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Where(x => x.Status != "Done"))
                            {

                                <tr>
                                    <td>@item.Title</td>
                                    <td>@item.Type</td>
                                    <td>@item.Description</td>
                                    <td>
                                        @if (item.Photo != null)
                                        {
                                            var base64 = Convert.ToBase64String(item.Photo);
                                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                            <img src='@imgSrc' style="max-width:100px; max-height:100px;" />
                                        }
                                    </td>
                                    <td>@item.DateTime</td>
                                    <td>@item.Employee.Name</td>
                                    <td>@item.Company.Name</td>
                                    <td>@item.Employee.Branch.Name</td>
                                    <td>@item.Status</td>
                                    <td>@item.VarrifiedBy</td>
                                    <td>
                                        @if (User.IsInRole("SuperAdmin") || User.IsInRole("Employee"))
                                        {
                                            <button type="button" class="btn btn-sm btn-info btn_update" onclick="Abc(@item.Id);">
                                                Update
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-sm btn-info btn_veri" data-id="@item.Id" ;">
                                                Need Varification
                                            </button>
                                        }
                                    </td>
                                    <td>
                                        @if (User.IsInRole("SuperAdmin") || User.IsInRole("Employee"))
                                        {
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                                            @:|
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                        }|
                                       
                                            @Html.ActionLink("Details", "Details", new { id = item.Id })
                                        
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div id="tab-2" class="tab-pane">
                <div class="table-responsive ">
                    <table class="table myfootable">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Title)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Type)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Photo)
                                </th>
                                <th>
                                    Posting Date
                                </th>
                                <th>
                                    Company Name
                                </th>
                                <th>
                                    Employee Name
                                </th>
                                <th>
                                    Employee Branch
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Status)
                                </th>
                                <th>
                                   Solved By
                                </th>
                                <th>
                                    Activity
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var itm in Model.Where(x => x.Status == "Done"))
                            {
                                <tr>
                                    <td>@itm.Title</td>
                                    <td>@itm.Type</td>
                                    <td>@itm.Description</td>
                                    <td>
                                        @if (itm.Photo != null)
                                        {
                                            var base64 = Convert.ToBase64String(itm.Photo);
                                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                            <img src='@imgSrc' style="max-width:100px; max-height:100px;" />
                                        }
                                    </td>
                                    <td>@itm.DateTime</td>
                                    <td>@itm.Company.Name</td>
                                    <td>@itm.Employee.Name</td>
                                    <td>@itm.Employee.Branch.Name</td>
                                    <td>@itm.Status</td>
                                    <td>@itm.VarrifiedBy</td>
                                    <td>
                                        @if (User.IsInRole("SuperAdmin"))
                                        {
                                            @Html.ActionLink("Edit", "Edit", new { id = itm.Id })
                                            @Html.ActionLink("Delete", "Delete", new { id = itm.Id })
                                        }
                                        @Html.ActionLink("Details", "Details", new { id = itm.Id })
                                    </td>
                                </tr>
                            }

                        </tbody>

                    </table>
                </div>
            </div>
        </div>

    </div>
</div>


<div class="modal right fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header text-center bg-primary">
                <h4 class="modal-title">Update Post Status</h4>
            </div>
            <div class="modal-body">
                <form id="myForm" method="post">
                    <div class="form-horizontal">
                        <div style="display: none;"><label for="Id" id="Id">  </label></div>
                        <div class="form-group">
                            @Html.Label("Status", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Status", ViewBag.Statuslist as List<SelectListItem>, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary pull-left" data-dismiss="modal">Close</button>
                <input type="submit" value="Update" class="btn btn-success save">
            </div>

        </div>
    </div>
</div>
<style>
    .modal.left .modal-dialog,
    .modal.right .modal-dialog {
        position: fixed;
        margin: auto;
        width: 300px;
        -webkit-transform: translate3d(0%, 0, 0);
        -ms-transform: translate3d(0%, 0, 0);
        -o-transform: translate3d(0%, 0, 0);
        transform: translate3d(0%, 0, 0);
    }

    .modal.left .modal-content,
    .modal.right .modal-content {
        overflow-y: auto;
    }

    .modal.left .modal-body,
    .modal.right .modal-body {
        /*padding: 15px 15px 80px;*/
    }

    /*Left*/
    .modal.left.fade .modal-dialog {
        left: -300px;
        -webkit-transition: opacity 0.3s linear, left 0.3s ease-out;
        -moz-transition: opacity 0.3s linear, left 0.3s ease-out;
        -o-transition: opacity 0.3s linear, left 0.3s ease-out;
        transition: opacity 0.3s linear, left 0.3s ease-out;
    }

    .modal.left.fade.in .modal-dialog {
        left: 0;
    }

    /*Right*/
    .modal.right.fade .modal-dialog {
        right: -300px;
        -webkit-transition: opacity 0.3s linear, right 0.3s ease-out;
        -moz-transition: opacity 0.3s linear, right 0.3s ease-out;
        -o-transition: opacity 0.3s linear, right 0.3s ease-out;
        transition: opacity 0.3s linear, right 0.3s ease-out;
    }

    .modal.right.fade.in .modal-dialog {
        right: 0;
    }

    /* ----- MODAL STYLE ----- */
    .modal-content {
        border-radius: 0;
        border: none;
    }

    .modal-header {
        border-bottom-color: #EEEEEE;
        background-color: #FAFAFA;
    }

    .btnupdate {
    }
</style>


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function() {

            $('.btn_veri').on('click',function(){
                var id = $(this).data('id');
                console.log(id);
                $.ajax({
                    url: "/Posts/Verification",
                    type: "post",
                    data: { Id: id},
                    dataType: "json",

                    success: function (flag) {
                        if (flag == true) {
                            alert("Successfully updated !");
                            function ManualRefresh(){
                                window.location.reload();
                            }
                            ManualRefresh();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr);
                    }
                });
            });

           
        });
        
        function Abc(id) {
            var myModal = $('#myModal');
            myModal.modal({
                backdrop: 'static',
                keyboard: false
            });
            var PostId = id;
            console.log(PostId);
            $('#myModal label[for=Id]').html(PostId);
            myModal.modal({ show: true });

            return false;

        }

            $('.save').click(function (e) {
                e.preventDefault();
                var Id = $.trim($("#myModal #Id").html());
                var Status = $("#myModal #Status").val();
                console.log(Id, Status);
                $('#myModal').modal('hide');
                $.ajax({
                    url: "/Posts/UpdateStatus",
                    type: "post",
                    data: { Id: Id, Status: Status},
                    dataType: "json",

                    success: function (flag) {
                        if (flag == true) {
                            alert("Successfully updated !");
                            function ManualRefresh(){
                                window.location.reload();
                            }
                            ManualRefresh();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr);
                    }
                });
            });

    </script>


}
